!function(a,b,c){}(ALLEX.lib,ALLEX,angular.module("allex.cgi",["ngFileUpload"])),function(a,b,c){c.factory("allex.cgi.UploadMixIn",["Upload","allex.lib.parseHttpResponseError",function(b,c){function d(a,b){this.uploadSettings=angular.extend({},e,b),this._uploadStateM=null,this.uploadURL=null,this.uploadFiles=null}var e={uploadslugname:"uploadURL",allowDir:!1,multiple:!1,doDrop:!0,accept:null,forget:!0,browse:!0};return d.prototype.__cleanUp=function(){this.uploadSettings=null,this._uploadStateM&&this._uploadStateM.destroy(),this._uploadStateM=null,this.uploadURL=null,this.uploadFiles=null},d.prototype.uploadSetUser=function(a){if(this._uploadStateM&&this._uploadStateM.destroy(),this._uploadStateM=null,a){var b={};b[this.uploadSettings.uploadslugname]=this.set.bind(this,"uploadURL"),this._uploadStateM=a.getStateAndAttach(b)}},d.prototype.uploadOnFileDropped=function(){},d.prototype.upload=function(c){var d=a.q.defer();return b.upload({url:this.uploadURL,file:this.get("uploadFiles"),method:"POST",fields:c}).progress(this._onUploadProgress.bind(this,d)).success(this._onUploadSuccess.bind(this,d)).error(this._onUploadError.bind(this,d)),d.promise},d.prototype._onUploadProgress=function(a,b){a.notify(parseInt(100*(b.loaded/b.total)))},d.prototype._onUploadSuccess=function(a,b,c,d,e){this.uploadSettings.forget&&this.uploadFiles.splice(0,this.uploadFiles.length),a.resolve(this.uploadGetSuccessMessage())},d.prototype._onUploadError=function(a,b,d,e,f){return d?b.length?a.reject(b):void a.reject(c(d)):void a.reject("Connectivity issues detected ...")},d.prototype.uploadGetSuccessMessage=function(){return"Successfully done"},d.addMethods=function(b){a.inheritMethods(b,d,"_onUploadProgress","_onUploadSuccess","_onUploadError","uploadOnFileDropped","upload","uploadSetUser","uploadGetSuccessMessage")},d}])}(ALLEX.lib,ALLEX,angular.module("allex.cgi")),function(a,b,c){c.directive("allexCgiUpload",["$compile",function(a){return{restrict:"E",replace:!0,scope:!1,template:'<button class="btn btn-primary" data-ng-model="_ctrl.uploadFiles" data-ngf-drag-over-class="dragover" ngf-multiple="{{_ctrl.uploadSettings.multiple}}" ngf-allow-dir="{{_ctrl.uploadSettings.allowDir}}" data-ngf-change="_ctrl.uploadOnFileDropped($files, $event, $rejected)"></button>',link:function(b,c,d){var e=!1,f=b._ctrl.uploadSettings;f.doDrop&&(c.attr("data-ngf-drop",""),e=!0),f.accept&&(c.attr("data-ngf-accept",f.accept),e=!0),f.browse&&c.attr("data-ngf-select","true"),d.cgilabel?c.html(d.cgilabel):c.html("Upload files"),e&&a(c)(b)}}}]),c.factory("allex.cgi.FormUploadInputControllerF",[function(){function b(b){a.BasicController.call(this,b);var d=b.$parent;this.widget_config=angular.extend({},c,(d._ctrl.getWidgetConfig()||{}).ngfupload)}var c={"ngf-drop-disabled":!0,"ngf-multiple":!1,accept:"*","ngf-allow-dir":!1};return a.inherit(b,a.BasicController),b.prototype.__cleanUp=function(){this.ig=null,this.uploadFiles=null,this.widget_config=null,a.BasicController.prototype.__cleanUp.call(this)},b.prototype.onFile=function(a,b,c){this.set("files",a)},b.prototype.set_files=function(a){var b=this.scope.$parent;b.formctrl.vals[b.index]=a,b.formctrl.$apply()},b.prototype.get_files=function(a){var b=this.scope.$parent;return b.formctrl.vals[b.index]},b}]),c.controller("allex.cgi.FormUploadInputController",["$scope","allex.cgi.FormUploadInputControllerF",function(a,b){new b(a)}]),c.directive("allexFormUploadInput",function(){return{restrict:"E",template:'<div><button type="file" accept="{{_ctrl.widget_config.accept}}" data-ngf-select data-ngf-change="_ctrl.onFile($files, $file, $event)" class="btn btn-default btn-block"><span data-ng-show="!_ctrl.get(\'files\').length">Choose file</span><span data-ng-show="_ctrl.get(\'files\').length">{{_ctrl.get(\'files\').length}} file selected</span></button><allex-form-input-emulator></allex-form-input-emulator></div>',replace:!0,controller:"allex.cgi.FormUploadInputController"}})}(ALLEX.lib,ALLEX,angular.module("allex.cgi"));